{"version":3,"file":"static/js/766.b63a2537.chunk.js","mappings":"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","sources":["components/Containerr.tsx","components/buttons/FilledButton.tsx","components/buttons/TextIconButton.tsx","components/buttons/TextButton.tsx","layouts/Navbar.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\n\ninterface IProps {\n  className?: string;\n  children: ReactNode;\n}\n\nexport default function Container({ className = '', children }: IProps) {\n  return (\n    <div className={`px-6 container ${className}`}>\n      {children}\n    </div>\n  )\n}","import { Button } from \"@material-tailwind/react\";\n\nexport default function FilledButton({\n  className = \"\",\n  children,\n  ...others\n}: IPropsOfComponent) {\n  return (\n    <Button\n      variant=\"filled\"\n      className={`rounded-md normal-case text-sm font-normal shadow-none hover:shadow-none px-4 py-2 ${className}`}\n      {...others}\n    >\n      {children}\n    </Button>\n  );\n}\n","import { IconButton } from \"@material-tailwind/react\";\n\nexport default function TextIconButton({\n  className = \"\",\n  children,\n  ...others\n}: IPropsOfComponent) {\n  return (\n    <IconButton\n      variant=\"text\"\n      className={`w-8 h-8 p-0 text-white hover:bg-gray-100 hover:bg-opacity-10 active:bg-gray-100 active:bg-opacity-10 ${className}`}\n      {...others}\n    >\n      {children}\n    </IconButton>\n  );\n}\n","import { Button } from \"@material-tailwind/react\";\n\nexport default function TextButton({\n  className = \"\",\n  children,\n  ...others\n}: IPropsOfComponent) {\n  return (\n    <Button\n      variant=\"text\"\n      className={`rounded-md normal-case text-sm font-normal text-gray-100 px-4 py-2 hover:bg-gray-100 hover:bg-opacity-10 active:bg-gray-100 active:bg-opacity-10 ${className}`}\n      {...others}\n    >\n      {children}\n    </Button>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useWeb3Modal } from \"@web3modal/react\";\nimport { useAccount, useDisconnect, useSwitchNetwork, useNetwork } from \"wagmi\";\nimport { Drawer, List, ListItem } from \"@material-tailwind/react\";\nimport Container from \"../components/Containerr\";\nimport FilledButton from \"../components/buttons/FilledButton\";\nimport TextIconButton from \"../components/buttons/TextIconButton\";\nimport TextButton from \"../components/buttons/TextButton\";\n\nimport logoImg from \"../asserts/images/logo.svg\";\n\nconst chainId = process.env.REACT_APP_CHAIN_ID;\n\n// -----------------------------------------------------------------------------------------\n\ninterface INavLink {\n  id: number;\n  label: string;\n  to: string;\n}\n\n// -----------------------------------------------------------------------------------------\n\nconst NAV_LINKS: Array<INavLink> = [];\n\nexport default function Navbar() {\n  const { pathname } = useLocation();\n  const { open } = useWeb3Modal();\n  const { isConnected } = useAccount();\n  const { disconnect } = useDisconnect();\n  const { switchNetwork } = useSwitchNetwork();\n  const { chain } = useNetwork();\n  const navigate = useNavigate();\n\n  const [visibleDrawer, setVisibleDrawer] = useState<boolean>(false);\n\n  const closeDrawer = () => {\n    setVisibleDrawer(false);\n  };\n\n  const navigateToPage = (to: string) => {\n    navigate(to);\n    closeDrawer();\n  };\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const navbar = document.querySelector(\"nav\");\n      if (window.scrollY > 50) {\n        navbar?.classList.add(\"bg-gray-900\");\n        navbar?.classList.remove(\"bg-transparent\");\n      } else {\n        navbar?.classList.add(\"bg-transparent\");\n        navbar?.classList.remove(\"bg-gray-900\");\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return (\n    \n    <nav className=\"sticky top-0 z-[99] bg-transparent transition-colors duration-300\">\n      <Container className=\"justify-between p-4 hidden lg:flex\">\n        <div className=\"flex items-center gap-8\">\n          <a href=\"/#\" className=\"w-[180px] h-[76px]\">\n            <img src={logoImg} alt=\"logo\" className=\"w-full\" />\n          </a>\n        </div>\n        <div className=\"flex items-center gap-8\">\n          <div className=\"flex items-center gap-4\">\n            {NAV_LINKS.map((linkItem) => (\n              <a key={linkItem.id} href={linkItem.to}>\n                <TextButton\n                  className={`gap-2 font-[GothamPro-Regular] text-[17] ${\n                    pathname === linkItem.to ? \"text-gray-100\" : \"text-white\"\n                  }`}\n                >\n                  {linkItem.label}\n                </TextButton>\n              </a>\n            ))}\n          </div>\n\n          {isConnected ? (\n            chain?.id === Number(chainId) ? (\n              <FilledButton\n                className=\"font-[GothamPro-Bold] flex items-center gap-1\"\n                onClick={() => disconnect()}\n              >\n                <Icon icon=\"mdi:wallet-outline\" className=\"text-xl\" />\n                Disconnect\n              </FilledButton>\n            ) : (\n              <FilledButton\n                className=\"font-[GothamPro-Bold] flex items-center gap-1\"\n                onClick={() => switchNetwork?.(Number(chainId))}\n              >\n                <Icon icon=\"mdi:wallet-outline\" className=\"text-xl\" />\n                Switch network\n              </FilledButton>\n            )\n          ) : (\n            <FilledButton\n              className=\"font-[GothamPro-Bold] flex items-center gap-1\"\n              onClick={() => open()}\n            >\n              <Icon icon=\"mdi:wallet-outline\" className=\"text-xl\" />\n              Connect Wallet\n            </FilledButton>\n          )}\n        </div>\n      </Container>\n\n      <Container className=\"justify-between items-center p-4 flex lg:hidden\">\n        <Link to=\"/\">\n          <img src={logoImg} alt=\"logo\" className=\"w-full\" />\n        </Link>\n\n        <TextIconButton\n          className=\"flex justify-center items-center\"\n          onClick={() => setVisibleDrawer(true)}\n        >\n          <Icon icon=\"ion:menu\" className=\"text-xl\" />\n        </TextIconButton>\n      </Container>\n      <Drawer\n        open={visibleDrawer}\n        onClose={closeDrawer}\n        className=\"p-4 bg-gray-900\"\n      >\n        <div className=\"flex flex-col gap-8\">\n          <div className=\"flex items-center justify-between\">\n            <a href=\"/\">\n              <img src={logoImg} alt=\"logo\" className=\"w-8\" />\n            </a>\n\n            <TextIconButton onClick={closeDrawer}>\n              <Icon icon=\"akar-icons:cross\" className=\"text-xl\" />\n            </TextIconButton>\n          </div>\n          <List>\n            {NAV_LINKS.map((linkItem) => (\n              <a\n                key={linkItem.id}\n                href={linkItem.to}\n                className={`gap-4 font-[GothamPro-Regular] text-[17] ${\n                  pathname === linkItem.to ? \"text-gray-100\" : \"text-gray-500\"\n                }`}\n              >\n                {linkItem.label}\n              </a>\n            ))}\n          </List>\n\n          <List>\n            {isConnected ? (\n              chain?.id === Number(chainId) ? (\n                <ListItem\n                  className=\"gap-4 text-gray-100 font-[GothamPro-Bold]\"\n                  onClick={() => disconnect()}\n                >\n                  <Icon icon=\"mdi:wallet-outline\" className=\"text-xl\" />\n                  Disconnect\n                </ListItem>\n              ) : (\n                <ListItem\n                  className=\"gap-4 text-gray-100 font-[GothamPro-Bold]\"\n                  onClick={() => switchNetwork?.(Number(chainId))}\n                >\n                  <Icon icon=\"mdi:wallet-outline\" className=\"text-xl\" />\n                  Switch network\n                </ListItem>\n              )\n            ) : (\n              <ListItem\n                className=\"gap-4 text-gray-100 font-[GothamPro-Bold]\"\n                onClick={() => open()}\n              >\n                <Icon icon=\"mdi:wallet-outline\" className=\"text-xl\" />\n                Connect Wallet\n              </ListItem>\n            )}\n          </List>\n        </div>\n      </Drawer>\n    </nav>\n  );\n}\n"],"names":["Container","_ref","_ref$className","className","children","_jsx","concat","FilledButton","others","_objectWithoutProperties","_excluded","Button","_objectSpread","variant","TextIconButton","IconButton","TextButton","chainId","process","NAV_LINKS","Navbar","pathname","useLocation","open","useWeb3Modal","isConnected","useAccount","disconnect","useDisconnect","switchNetwork","useSwitchNetwork","chain","useNetwork","_useState","useNavigate","useState","_useState2","_slicedToArray","visibleDrawer","setVisibleDrawer","closeDrawer","useEffect","handleScroll","navbar","document","querySelector","window","scrollY","classList","add","remove","addEventListener","removeEventListener","_jsxs","href","src","logoImg","alt","map","linkItem","to","label","id","Number","onClick","Icon","icon","Link","Drawer","onClose","List","ListItem"],"sourceRoot":""}